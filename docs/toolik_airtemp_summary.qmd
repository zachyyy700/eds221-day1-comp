---
title: "Toolik Station Air Temperature"
format: html
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(tidyverse)
library(here)
library(janitor)
library(skimr)
```

## Read in the Toolik Lake meteorologic data

**Data:** Shaver, G. 2019. A multi-year DAILY weather file for the Toolik Field Station at Toolik Lake, AK starting 1988 to present. ver 4. Environmental Data Initiative. https://doi.org/10.6073/pasta/ce0f300cdf87ec002909012abefd9c5c (Accessed 2021-08-08).

The data are stored in the `data-raw` subfolder. We'll use `here::here()` to point to it, and read it in using the `readr::read_csv()` function from the `readr` package (part of the `tidyverse`).

```{r}
toolik_weather <- read_csv(here::here("data", "data-raw", "toolik_weather.csv"),)
```

-   First: Look at the data you've read in (always always)

-   Second: What is that warning? `problems()` - line 6424

-   How does R assign classes to data it reads in? See: https://readr.tidyverse.org/articles/readr.html

-   Third: Are all missing values stored the same way? See: #N/A, and add a new argument within `readr`: na = "#N/A"

## Basic exploration

```{r}
# An overview:
skimr::skim(toolik_weather)

# A few other things to explore
dim(toolik_weather)
names(toolik_weather)
```

## One awesome cleaning tool: {janitor}

...and meet the pipe operator!

I don't want to deal with those capital letters. These aren't even bad looking column names, but let's clean them up a bit.

```{r}
toolik_weather <- toolik_weather %>% 
  clean_names() # What does this do? Say it in words.
# clean_names(), a way to layer functions

# What is this %>% thing? Meet the pipe operator! Also, as of a couple months ago, |> is a native pipe operator (versus %>%, which comes along with the tidyverse)

# Now what are the column names?
```

```{r}
names(toolik_weather)
```

## Make a graph

Let's make a jitterplot of temperatures by month.

```{r}
toolik_temp_plot <- ggplot(data = toolik_weather, aes(x = as.factor(month), y = daily_air_temp_mean_c)) +
  geom_jitter(aes(color = daily_air_temp_mean_c), show.legend = FALSE) +
  scale_color_gradient(low = "blue", high = "orange") +
  theme_minimal() +
  labs(title = "Toolik Station daily air temperature",
       x = "Month",
       y = "Daily mean air temperatures (Celsius)",
       caption = "It gets quite cold in Toolik, Alaska")

toolik_temp_plot
```

## Export a figure

```{r}
ggsave(here::here("figs", "toolik_temp_plot.png"), height = 6, width = 7)
```

Now try changing something about the ggplot code, and re-run your `ggsave()` line above. Does your saved figure change? Great!

## End Example 1

## Example 2
Read in chlorophyll data
```{r}
toolik_chloro <- read_csv(here::here("data", "data-raw","toolik_chlorophyll.csv"))
```

Data Overview
```{r}
# skim dat
skimr::skim(toolik_chloro)
# dim dat
dim(toolik_chloro)
names(toolik_chloro)
```

```{r}
# use janitor, clean up ugly ahhh names
toolik_chloro <- toolik_chloro %>%
  clean_names()

names(toolik_chloro)
```

```{r}
# replace missing values with NA. always check data.
toolik_chloro$active_chl_a_ug_l <- na_if(toolik_chloro$active_chl_a_ug_l, ".")

# change character data to numeric
toolik_chloro$active_chl_a_ug_l <- as.numeric(toolik_chloro$active_chl_a_ug_l)
```

```{r}
# plot dat jon
toolik_chloro_plot <- ggplot(data = toolik_chloro, aes(x = depth, y = active_chl_a_ug_l)) +
  geom_point() + 
  labs(title = "Toolik Lake Chlorophyll a Concentration",
       x = "Depth (m)", 
       y = "Chlorophyll a Concentration (ug/L)") +
  theme_minimal()
toolik_chloro_plot

# save plot
ggsave(here::here("figs", "toolik_chloro_plot.png"), height = 6, width = 7)
```

